// Patch order
// - Initial setup is done as an insert node. Do not touch.
// - Values within the initial setup can be patched inside an 
//   "@EMBEDDED_KOS_KIRKUITS:BEFORE[EmbeddedKOSKirkuits] { ... }"
//   block (this is the right place to rebalance the Embedded kOS Kirkuits modlet)
// - Set markers on parts using "NEEDS[kOS,EmbeddedKOSKirkuits]"
// - The catch-all patch that adds embedded kOS kirkuitry to every eligible part that has
//   no marker or MODULE[kOSProcessor] runs as "NEEDS[kOS]:FOR[EmbeddedKOSKirkuits]".
//   Do not touch.
// - actual patching and cleanup is done in "AFTER[EmbeddedKOSKirkuits_passX]"
//   Do not touch.
//
// TL;DR: mod support / other mods should use "NEEDS[kOS,EmbeddedKOSKirkuits]" 
// for all of their parts patches, and may rebalance EmbeddedKOSKirkuits by patching 
// "@EMBEDDED_KOS_KIRKUITS:BEFORE[EmbeddedKOSKirkuits] { ... }"

// Tweakables for the individual processor modules
EMBEDDED_KOS_KIRKUITS {

    Default_kOSProcessor_type    = default
    Default_kOSProcessor_include = optional_default_off

    // Early game processor. Weak, expensive, inefficient, massive.
    PROCESSOR {
        name = early_basic
        title = SAG-LT6a Scriptable Core
        diskSpace = 500
        ECPerBytePerSecond = 0.00001
        ECPerInstruction = 0.00008
        baseDiskSpace = 500
        diskSpaceCostFactor = 0.0008
        baseModuleCost = 1200
        diskSpaceMassFactor = 0.00000048829
        baseModuleMass = 0.06
    }
    // Early game "high end" processor. 3 times
    // the storage for only four times the price,
    // but correspondingly higher mass and energy
    // consumption
    PROCESSOR {
        name = early_advanced
        title = SAG-LT6b Scriptable Core
        diskSpace = 1500
        ECPerBytePerSecond = 0.00001
        ECPerInstruction = 0.00008
        baseDiskSpace = 1500
        diskSpaceCostFactor = 0.0008
        baseModuleCost = 3600
        diskSpaceMassFactor = 0.00000048829
        baseModuleMass = 0.12
    }
    // Standard option, mid game. Embedded version of the 
    // "KR-2042 b Scriptable Control System", with the same
    // setting (apart from mass - the embedded version is only 
    // half as massive because it does not need the extra 
    // housing)
    PROCESSOR {
        name = default
        title = KR-2042 e Scriptable Core
        diskSpace = 5000
        ECPerBytePerSecond = 0
        ECPerInstruction = 0.000004
        baseDiskSpace = 5000
        diskSpaceCostFactor = 0.0244140625
        baseModuleCost = 1200
        diskSpaceMassFactor = 0.0000000048829
        baseModuleMass = 0.05
    }
    // Small contemporary or near future option, late mid game. 
    // Inexpensive, does not need much resource wise,
    // but with limited performance. Think "Microcontroller". 
    PROCESSOR {
        name = modern_small
        title = OV7-3CM Micro Scriptable Core 
        diskSpace = 1500
        ECPerBytePerSecond = 0 
        ECPerInstruction = 0.0000004
        baseDiskSpace = 1500
        diskSpaceCostFactor = 0.0244140625
        baseModuleCost = 300
        diskSpaceMassFactor = 0.00000000048829
        baseModuleMass = 0.0001
    }
    // Allround contemporary or near future option, late mid game. 
    // A bit more expensive, not quite as effective as the "small",
    // but with limited performance. Think "Modern Embedded Computer".
    // It *does* use twice as much electricity as the microcontroller,
    // though, as an added incentive to keep it small. 
    PROCESSOR {
        name = modern_medium
        title = OV7-3CS Standard Scriptable Core
        diskSpace = 5000
        ECPerBytePerSecond = 0 
        ECPerInstruction = 0.0000008
        baseDiskSpace = 5000
        diskSpaceCostFactor = 0.0244140625
        baseModuleCost = 1200
        diskSpaceMassFactor = 0.00000000048829
        baseModuleMass = 0.0005
    }
    // Advanced contemporary or near future option, late mid game. 
    // Double the storage for double the price, but 5 times the mass 
    PROCESSOR {
        name = modern_large
        title = OV7-3CA Advanced Scriptable Core
        diskSpace = 10000
        ECPerBytePerSecond = 0 
        ECPerInstruction = 0.0000008
        baseDiskSpace = 10000
        diskSpaceCostFactor = 0.0244140625
        baseModuleCost = 2400
        diskSpaceMassFactor = 0.00000000048829
        baseModuleMass = 0.0025
    }
    // Far Future option, late game. Same mass as the small microcontroller,
    // but effectively unlimited storage at no extra cost and mass, and uses 
    // even less electricity.
    // Don't even think about it, just slap it in.
    PROCESSOR {
        name = unlimited
        title = UCM-3MA Universal Compute Module
        diskSpace = 4000000
        ECPerBytePerSecond = 0 
        ECPerInstruction = 0.00000004
        baseDiskSpace = 1000000
        diskSpaceCostFactor = 0
        baseModuleCost = 300
        diskSpaceMassFactor = 0
        baseModuleMass = 0.0001
    }
}

////
//// EmbeddedKOSKirkuits_pass0: Sanity checks, set fallback values when B9PartSwitch is not installed,
//// Add a default Embedded_kOSProcessor_type when a processor should be included
//// but no type is set explicitly
////
// Sanity checks: Drop markers from all parts that already have a MODULE[kOSProcessor]
@PART:HAS[MODULE[kOSProcessor],#Embedded_kOSProcessor_include[*]]:AFTER[EmbeddedKOSKirkuits] {
    -Embedded_kOSProcessor_include = deleted
}
@PART:HAS[MODULE[kOSProcessor],#Embedded_kOSProcessor_type[*]]:AFTER[EmbeddedKOSKirkuits] {
    -Embedded_kOSProcessor_type = deleted
}
// Fallbacks when B9PartSwitch is missing
@PART:HAS[#Embedded_kOSProcessor_include[optional_default_on]]:NEEDS[!B9PartSwitch]:AFTER[EmbeddedKOSKirkuits] {
    @Embedded_kOSProcessor_include = always
}
@PART:HAS[#Embedded_kOSProcessor_include[optional_default_off]]:NEEDS[!B9PartSwitch]:AFTER[EmbeddedKOSKirkuits] {
    @Embedded_kOSProcessor_include = never
    -Embedded_kOSProcessor_type = deleted
}
// Set default Embedded_kOSProcessor_type if none has been specified
@PART:HAS[~Embedded_kOSProcessor_type[*],~Embedded_kOSProcessor_include[never],#Embedded_kOSProcessor_include[*]]:AFTER[EmbeddedKOSKirkuits] {
    Embedded_kOSProcessor_type = #$@EMBEDDED_KOS_KIRKUITS/Default_kOSProcessor_type$
}

////
//// Add MODULE[kOSProcessor] to all parts that should include one and 
//// configure the modules (the congfigure step also takes care of modules
//// and upgrade nodes with an explicitly added Embedded_kOSProcessor_type)
////
@PART:HAS[#Embedded_kOSProcessor_include[*],~Embedded_kOSProcessor_include[never]]:NEEDS[kOS]:AFTER[EmbeddedKOSKirkuits] {
    MODULE
    {
        name = kOSProcessor
        Embedded_kOSProcessor_type = #$/Embedded_kOSProcessor_type$
    }
}
@PART:HAS[@MODULE[kOSProcessor]:HAS[#Embedded_kOSProcessor_type[*]]]:AFTER[EmbeddedKOSKirkuits] {
    @MODULE[kOSProcessor]:HAS[#Embedded_kOSProcessor_type[early_basic]] {
        %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/title$
        %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/diskSpace$
        %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/ECPerBytePerSecond$ 
        %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/ECPerInstruction$
        %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/baseDiskSpace$
        %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/diskSpaceCostFactor$
        %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/baseModuleCost$
        %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/diskSpaceMassFactor$
        %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/baseModuleMass$
    }
    @MODULE[kOSProcessor]:HAS[#Embedded_kOSProcessor_type[early_advanced]] {
        %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/title$
        %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/diskSpace$
        %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/ECPerBytePerSecond$ 
        %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/ECPerInstruction$
        %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/baseDiskSpace$
        %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/diskSpaceCostFactor$
        %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/baseModuleCost$
        %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/diskSpaceMassFactor$
        %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/baseModuleMass$
    }
    @MODULE[kOSProcessor]:HAS[#Embedded_kOSProcessor_type[default]] {
        %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/title$
        %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/diskSpace$
        %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/ECPerBytePerSecond$ 
        %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/ECPerInstruction$
        %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/baseDiskSpace$
        %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/diskSpaceCostFactor$
        %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/baseModuleCost$
        %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/diskSpaceMassFactor$
        %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/baseModuleMass$
    }
    @MODULE[kOSProcessor]:HAS[#Embedded_kOSProcessor_type[modern_small]]{
        %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/title$
        %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/diskSpace$
        %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/ECPerBytePerSecond$ 
        %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/ECPerInstruction$
        %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/baseDiskSpace$
        %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/diskSpaceCostFactor$
        %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/baseModuleCost$
        %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/diskSpaceMassFactor$
        %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/baseModuleMass$
    }
    @MODULE[kOSProcessor]:HAS[#Embedded_kOSProcessor_type[modern_medium]] {
        %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/title$
        %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/diskSpace$
        %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/ECPerBytePerSecond$ 
        %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/ECPerInstruction$
        %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/baseDiskSpace$
        %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/diskSpaceCostFactor$
        %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/baseModuleCost$
        %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/diskSpaceMassFactor$
        %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/baseModuleMass$
    }
    @MODULE[kOSProcessor]:HAS[#Embedded_kOSProcessor_type[modern_large]] {
        %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/title$
        %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/diskSpace$
        %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/ECPerBytePerSecond$ 
        %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/ECPerInstruction$
        %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/baseDiskSpace$
        %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/diskSpaceCostFactor$
        %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/baseModuleCost$
        %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/diskSpaceMassFactor$
        %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/baseModuleMass$
    }
    @MODULE[kOSProcessor]:HAS[#Embedded_kOSProcessor_type[unlimited]] {
        %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/title$
        %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/diskSpace$
        %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/ECPerBytePerSecond$ 
        %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/ECPerInstruction$
        %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/baseDiskSpace$
        %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/diskSpaceCostFactor$
        %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/baseModuleCost$
        %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/diskSpaceMassFactor$
        %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/baseModuleMass$
    }
}
@PART:HAS[@MODULE[kOSProcessor]:HAS[@UPGRADES:HAS[@UPGRADE:HAS[#Embedded_kOSProcessor_type[*]]]]]:AFTER[EmbeddedKOSKirkuits] {
    @MODULE[kOSProcessor] {
        @UPGRADES {
            @UPGRADE:HAS[#Embedded_kOSProcessor_type[early_basic]] {
                %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/title$
                %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/diskSpace$
                %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/ECPerBytePerSecond$ 
                %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/ECPerInstruction$
                %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/baseDiskSpace$
                %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/diskSpaceCostFactor$
                %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/baseModuleCost$
                %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/diskSpaceMassFactor$
                %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_basic]/baseModuleMass$
            }
            @UPGRADE:HAS[#Embedded_kOSProcessor_type[early_advanced]] {
                %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/title$
                %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/diskSpace$
                %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/ECPerBytePerSecond$ 
                %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/ECPerInstruction$
                %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/baseDiskSpace$
                %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/diskSpaceCostFactor$
                %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/baseModuleCost$
                %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/diskSpaceMassFactor$
                %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[early_advanced]/baseModuleMass$
            }
            @UPGRADE:HAS[#Embedded_kOSProcessor_type[default]] {
                %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/title$
                %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/diskSpace$
                %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/ECPerBytePerSecond$ 
                %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/ECPerInstruction$
                %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/baseDiskSpace$
                %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/diskSpaceCostFactor$
                %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/baseModuleCost$
                %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/diskSpaceMassFactor$
                %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[default]/baseModuleMass$
            }
            @UPGRADE:HAS[#Embedded_kOSProcessor_type[modern_small]]{
                %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/title$
                %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/diskSpace$
                %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/ECPerBytePerSecond$ 
                %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/ECPerInstruction$
                %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/baseDiskSpace$
                %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/diskSpaceCostFactor$
                %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/baseModuleCost$
                %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/diskSpaceMassFactor$
                %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_small]/baseModuleMass$
            }
            @UPGRADE:HAS[#Embedded_kOSProcessor_type[modern_medium]] {
                %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/title$
                %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/diskSpace$
                %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/ECPerBytePerSecond$ 
                %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/ECPerInstruction$
                %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/baseDiskSpace$
                %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/diskSpaceCostFactor$
                %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/baseModuleCost$
                %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/diskSpaceMassFactor$
                %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_medium]/baseModuleMass$
            }
            @UPGRADE:HAS[#Embedded_kOSProcessor_type[modern_large]] {
                %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/title$
                %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/diskSpace$
                %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/ECPerBytePerSecond$ 
                %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/ECPerInstruction$
                %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/baseDiskSpace$
                %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/diskSpaceCostFactor$
                %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/baseModuleCost$
                %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/diskSpaceMassFactor$
                %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[modern_large]/baseModuleMass$
            }
            @UPGRADE:HAS[#Embedded_kOSProcessor_type[unlimited]] {
                %title = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/title$
                %diskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/diskSpace$
                %ECPerBytePerSecond = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/ECPerBytePerSecond$ 
                %ECPerInstruction = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/ECPerInstruction$
                %baseDiskSpace = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/baseDiskSpace$
                %diskSpaceCostFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/diskSpaceCostFactor$
                %baseModuleCost = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/baseModuleCost$
                %diskSpaceMassFactor = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/diskSpaceMassFactor$
                %baseModuleMass = #$@EMBEDDED_KOS_KIRKUITS/PROCESSOR[unlimited]/baseModuleMass$
            }
        }
    }
}

////
//// Handle switchable modules and multiple processor options
//// Needs B9PartSwitch
//// 
// Add a B9PartSwitch module for all switchable processors
@PART:HAS[#Embedded_kOSProcessor_include[optional_*]]:NEEDS[kOS,B9PartSwitch]:AFTER[EmbeddedKOSKirkuits] {
    MODULE
    {
        name = ModuleB9PartSwitch
        switcherDescription = kOS Processor
        switcherDescriptionPlural = kOS Processor Options
        moduleID = EmbeddedKOSProcessorSwitch
        SUBTYPE {
            name = #$../../MODULE[kOSProcessor]/name$
            title = #$../../MODULE[kOSProcessor]/title$
            addedMass = #$../../MODULE[kOSProcessor]/baseModuleMass$
            addedCost = #$../../MODULE[kOSProcessor]/baseModuleCost$
            MODULE {
                IDENTIFIER {
                    name = kOSProcessor
                }
                moduleActive = True
            }
        }
        SUBTYPE {
            name = None
            title = No kOS Processor
            MODULE {
                IDENTIFIER {
                    name = kOSProcessor
                }
                moduleActive = False
            }
        }
    }
    @MODULE[kOSProcessor] {
        // extra mass and cost is handled by B9PartSwitch
        %baseModuleMass = 0
        %baseModuleCost = 0
    }
}
// Set the default choice to "None" for Embedded_kOSProcessor_include[optional_default_off]
@PART:HAS[#Embedded_kOSProcessor_include[optional_default_off]]:NEEDS[kOS,B9PartSwitch]:AFTER[EmbeddedKOSKirkuits] {
   @MODULE[ModuleB9PartSwitch]:HAS[#moduleID[EmbeddedKOSProcessorSwitch]] {
        @SUBTYPE[None] {
            %defaultSubtypePriority = 1
        }
   }
}

////
//// Final Cleanup, remove all leftover markers on parts and the 
//// EMBEDDED_KOS_KIRKUITS configuration node itself
////
@PART:HAS[#Embedded_kOSProcessor_include[*]]:LAST[EmbeddedKOSKirkuits] {
    -Embedded_kOSProcessor_include = deleted
}
@PART:HAS[#Embedded_kOSProcessor_type[*]]:LAST[EmbeddedKOSKirkuits] {
    -Embedded_kOSProcessor_type = deleted
}
!EMBEDDED_KOS_KIRKUITS:LAST[EmbeddedKOSKirkuits] {}